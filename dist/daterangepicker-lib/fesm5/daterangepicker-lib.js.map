{"version":3,"file":"daterangepicker-lib.js","sources":["ng://daterangepicker-lib/lib/constants.ts","ng://daterangepicker-lib/lib/util/date.util.ts","ng://daterangepicker-lib/lib/daterangepicker-lib.component.ts","ng://daterangepicker-lib/lib/daterangepicker-lib.module.ts"],"sourcesContent":["export class Constants {\n\n  public static readonly BASE_URI = '/cfa/api/';\n\n  public static readonly STATUS_CODE = {\n    OK: 200\n  };\n\n  // public static readonly REQUEST_URLS = {\n  //   LOGOUT: Constants.BASE_URI + 'v1/auth/logout',\n  // };\n  //\n  // public static readonly OPEN_URLS = {\n  //   LOGIN: Constants.BASE_URI + 'v1/auth/login',\n  //   REFRESH_TOKEN: Constants.BASE_URI + 'v1/auth/refresh/token',\n  //   FORGOT_PASSWORD: Constants.BASE_URI + 'v1/forgot-password',\n  //   FORGOT_PASSWORD_VALIDATE: Constants.BASE_URI + 'v1/forgot-password/validate',\n  //   FORGOT_PASSWORD_RESET: Constants.BASE_URI + 'v1/forgot-password/reset'\n  // };\n  //\n  // public static readonly ATTRIBUTES: any = {\n  //   mou: 'MOU',\n  //   calls: 'Number of Calls',\n  //   shortCalls: 'Short Calls'\n  // };\n  //\n  // public static readonly COLORS: any = {\n  //   BLUE: 'blue',\n  //   GREEN: 'green',\n  //   PURPLE: 'purple',\n  //   YELLOW: 'yellow',\n  //   ORANGE: 'orange'\n  // };\n  //\n  // public static readonly CUSTOM_CHECK: any = {\n  //   BLUE: 'customcheck_blue',\n  //   GREEN: 'customcheck_green',\n  //   PURPLE: 'customcheck_purple'\n  // };\n  //\n  // public static readonly EMPTY_FUNCTION = function () {\n  // };\n  //\n  // public static readonly FRAUD_TYPE: any = {\n  //   IRSF: 'IRSF',\n  //   SIMBOX: 'SIMBOX',\n  //   CLI: 'CLI'\n  // };\n  //\n  // public static readonly SELECTED_VIEW: any = {\n  //   SIM_VIEW: 'simview',\n  //   SIMBOX_VIEW: 'simboxview',\n  //   CASE_VIEW: 'caseView',\n  //   CLUSTER_VIEW: 'clusterView'\n  // };\n  //\n  // public static readonly TRAFFIC_DIRECTION: any = {\n  //   INCOMING: 'Incoming',\n  //   OUTGOING: 'Outgoing'\n  // };\n  //\n  // public static readonly HIGHCHART_TYPE: any = {\n  //   BAR: 'bar',\n  //   VENN: 'venn'\n  // };\n  //\n  // public static readonly COLOR: any = {\n  //   BLUE: 'blue',\n  //   YELLOW: 'yellow',\n  //   ORANGE: 'orange'\n  // };\n  //\n  // public static readonly tasksPerPage: number = 7;\n  // public static readonly rulesPerPage: number = 7;\n  // public static readonly PRN_COLOR_HEXCODE = '#F6C192';\n  // public static readonly ACTIVE = 'active';\n  // public static readonly PRN_COLOR = 'orange';\n  // public static readonly ORDER_BY_ASC = 'ASC';\n  // public static readonly ORDER_BY_DESC = 'DESC';\n  // public static readonly ARROW_UP = 'up';\n  // public static readonly ARROW_DOWN = 'down';\n  // public static readonly SELECT_STRING = 'select';\n   public static readonly EMPTY_STRING = '';\n  // public static readonly AND_STRING = 'and';\n  // public static readonly OR_STRING = 'or';\n  // public static readonly SPACE_STRING = ' ';\n  // public static readonly BORDER_BOTTOM = 'border-bottom';\n  // public static readonly FORM_ELEMENT_BORDER_CSS = 'solid 1px red';\n  // public static readonly FORM_VALIDATION_ERROR_STRING = 'All (*) marked fields are mandatory !';\n  // public static readonly MOMENT_DATE_OBJECT_KEY = '_d';\n  // public static readonly CURRENT_USER = 'currentUser';\n  // public static readonly YES = 'Yes';\n  // public static readonly CANCEL = 'Cancel';\n  // public static readonly OK = 'Ok';\n  // public static readonly SUCCESS = 'Success';\n  // public static readonly ERROR = 'Error';\n  // public static readonly NO_CASES_FOUND = 'No Cases Found';\n  // public static readonly NO_DATA_FOUND = 'No Data Found';\n  // public static readonly DISMISS = 'dismiss';\n  // public static readonly PROP_CHECKED = 'checked';\n  //\n  // public static isAuthUrl(url: string): boolean {\n  //   let REQUEST_URL_VALUES = [];\n  //   Object.keys(Constants.REQUEST_URLS).forEach((key: string) => {\n  //     REQUEST_URL_VALUES.push(Constants.REQUEST_URLS[key]);\n  //   });\n  //   return REQUEST_URL_VALUES.includes(url);\n  // }\n\n}\n","import * as moment from \"moment\";\n\nexport class DateUtil {\n\n  public static dateTimeString: string = '_d';\n\n  private static monthList = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  public static milisInSecond: number = 1000;\n  public static milisInMinute: number = 60 * 1000;\n  public static milisInHour: number = 3600 * 1000;\n  public static milisInDay: number = 24 * 3600 * 1000;\n  public static milisInMonth: number = 30 * 24 * 3600 * 1000;\n\n  public static DATE_FORMAT_DD_MMM_YYYY: string = 'DD MMM YYYY';\n  public static DATE_FORMAT_dd_MMM_yyyy: string = 'dd MMM yyyy';\n  public static DATE_FORMAT_EEE_dd_MMM_yyyy: string = 'EEE, dd MMM yyyy';\n  public static DATE_FORMAT_dd_MMM: string = 'dd MMM';\n  public static DATE_FORMAT_DD_MMM: string = 'DD MMM';\n  public static DATE_FORMAT_hh_mm_A: string = 'hh:mm A';\n  public static DATE_FORMAT_hh_mm_a: string = 'hh:mm a';\n  public static DATE_FORMAT_MMM: string = 'MMM';\n\n  public static DATE_RANGE: any = {\n    WEEK: 'Week',\n    MONTH: 'Month',\n    QUARTER: 'Quarter'\n  };\n\n  // static getStartTime(duration: string) {\n  //   let startTime: number = moment.utc().startOf(duration)[this.dateTimeString].getTime();\n  //   let timeRange = localStorage.getItem('timeRange');\n  //   if (timeRange && parseInt(timeRange) > 0) {\n  //     startTime = DateUtil.getStartTimeFromTimeRange(timeRange, duration);\n  //   }\n  //   return startTime;\n  // }\n\n  // static getEndTime(duration: string) {\n  //   let endTime: number = moment.utc().endOf(duration)[this.dateTimeString].getTime();\n  //   let timeRange = localStorage.getItem('timeRange');\n  //   if (timeRange && parseInt(timeRange) > 0) {\n  //     endTime = DateUtil.getEndTimeFromTimeRange(timeRange, duration);\n  //   }\n  //   return endTime;\n  // }\n\n  static getEpochTimeInSeconds(time) {\n    return Math.floor(time / 1000);\n  }\n\n  /*static getStartTimeFromTimeRange(timeRange, duration) {\n    return moment.utc(moment.unix(timeRange)).startOf(duration)[DateUtil.dateTimeString].getTime();\n  }\n\n  static getEndTimeFromTimeRange(timeRange, duration) {\n    return moment.utc(moment.unix(timeRange)).endOf(duration)[DateUtil.dateTimeString].getTime();\n  }\n\n  /!**\n   This method calculate the startTime and EndTime from the dateRangeString\n   i.e if dateRangeString is Week then startTime will be startOfWeek And\n   EndTime will be endOfWeek.\n\n   @param:dateRangeString:String\n   @return:Object\n   **!/\n  static getDateRangeFromSelectedRange(dateRangeString: string) {\n    let startTime: number;\n    let endTime: number;\n    let currentTime = moment.utc();\n    let timeRange = localStorage.getItem('timeRange');\n    if (timeRange && parseInt(timeRange) > 0) {\n      currentTime = moment.utc(moment.unix(Number(timeRange)));\n    }\n\n    if (dateRangeString === 'Today') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).startOf('day')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('day')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'Week') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).startOf('week')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('week')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'This Week') {\n      if (moment(currentTime).startOf('week').day() == 0) {\n        // check if start day of week is sunday then change it monday as per iso week\n        startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).startOf('week').add(1, 'day')[this.dateTimeString].getTime());\n        endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('week').add(1, 'day')[this.dateTimeString].getTime());\n      }\n      else {\n        startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).startOf('week')[this.dateTimeString].getTime());\n        endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('week')[this.dateTimeString].getTime());\n      }\n    }\n    else if (dateRangeString === 'This Month') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).startOf('month')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('month')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'Last Six Months') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(5, 'month').startOf('month')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('month')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'Last Month') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'month').startOf('month')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'month').endOf('month')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'Last Quarter') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'quarter').startOf('quarter')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'quarter').endOf('quarter')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'Last Year') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'year').startOf('year')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'year').endOf('year')[this.dateTimeString].getTime());\n    }\n\n    // This v/s Last\n    else if (dateRangeString === 'day') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'day').startOf('day')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('day')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'week') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'week').startOf('week')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('week')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'month') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'month').startOf('month')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('month')[this.dateTimeString].getTime());\n    }\n    else if (dateRangeString === 'quarter') {\n      startTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(1, 'quarter').startOf('quarter')[this.dateTimeString].getTime());\n      endTime = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('quarter')[this.dateTimeString].getTime());\n    }\n    return {\n      startTime: startTime,\n      endTime: endTime\n    };\n  }\n\n  static getDateRangeInString(startTime: number, endTime: number) {\n    let dateRangeString;\n    let startTimeMoment = moment.utc(startTime * 1000);\n    let endTimeMoment = moment.utc(endTime * 1000);\n\n    dateRangeString = startTimeMoment.date() + ' ' + this.monthList[startTimeMoment.month()] + ' ' + startTimeMoment.year() + ' - ' +\n                      endTimeMoment.date() + ' ' + this.monthList[endTimeMoment.month()] + ' ' + endTimeMoment.year();\n\n    return dateRangeString;\n  }\n\n  static getStartEndTimeByNumberOfDays(currentTime: any, numberOfDays: number) {\n    let startEndTime: any = {'startTime': null, 'endTime': null};\n    startEndTime['startTime'] = DateUtil.getEpochTimeInSeconds(moment(currentTime).subtract(numberOfDays, 'day').startOf('day')[this.dateTimeString].getTime());\n    startEndTime['endTime'] = DateUtil.getEpochTimeInSeconds(moment(currentTime).endOf('day')[DateUtil.dateTimeString].getTime());\n    return startEndTime;\n  }*/\n\n}\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from \"@angular/core\";\nimport {Constants} from \"./constants\";\nimport {DateUtil} from \"./util/date.util\";\n\nimport $ from \"jquery\";\nimport moment from 'moment';\n\nimport 'daterangepicker';\n\n@Component({\n  selector: 'app-daterange-picker',\n  templateUrl: './daterangepicker.component.html',\n  styleUrls: ['./daterangepicker-lib.component.css']\n})\nexport class DaterangepickerLibComponent implements OnInit, AfterViewInit{\n\n  @Input('id') id: string;\n  @Input('enabledPresets') enabledPresets: Array<string>;\n  @Input('selectedDuration') selectedDuration:any;\n  @Input('timePicker') timePicker: boolean = false;\n  @Input('alwaysShowCalendars') alwaysShowCalendar: boolean = true;\n  @Input('locale') locale: any;\n  @Input('minDate') minDate: any;\n  @Input('minDate') maxDate: any;\n  @Input('startTime') startTime: number = 0;\n  @Input('endTime') endTime: number = 0;\n  @Input('enableDateRangeOption') enableDateRangeOption: boolean = true;\n  @Input('tooltipMessage') tooltipMessage: string = Constants.EMPTY_STRING;\n\n  @ViewChild('dateRangePicker', {static:false}) dateRangePicker: ElementRef;\n  @ViewChild('dateRangePickerInput', {static:false}) dateRangePickerInput: ElementRef;\n\n  @Output() dateRangeChanged: EventEmitter<any>;\n\n  presetsConfig: any;\n  enabledPresetsRangeConfig: any;\n  timeRange: string = localStorage.getItem('timeRange');\n  checkOutsideClickEvent: boolean = false;\n\n  constructor() {\n    this.dateRangeChanged = new EventEmitter();\n    let currentTime = moment();\n    if (this.timeRange && parseInt(this.timeRange) > 0) {\n      currentTime = (moment.unix(Number.parseInt(this.timeRange)));\n    }\n    this.presetsConfig = {\n      'Today': [moment(currentTime), moment(currentTime)],\n      'This Week': [moment(currentTime).startOf('week'), moment(currentTime).endOf('week')],\n      'Week': [moment(currentTime).startOf('week'), moment(currentTime).endOf('week')],\n      'This Month': [moment(currentTime).startOf('month'), moment(currentTime).endOf('month')],\n      'Month': [moment(currentTime).startOf('month'), moment(currentTime).endOf('month')],\n      'Yesterday': [moment(currentTime).subtract(1, 'days'), moment(currentTime).subtract(1, 'days')],\n      'Last 7 Days': [moment(currentTime).subtract(6, 'days'), moment(currentTime)],\n      'Last 30 Days': [moment(currentTime).subtract(29, 'days'), moment(currentTime)],\n      'Last Month': [moment(currentTime).subtract(1, 'month').startOf('month'), moment(currentTime).subtract(1, 'month').endOf('month')],\n      'Quarter': [moment(currentTime).startOf('quarter'), moment(currentTime).endOf('quarter')]\n    };\n  }\n\n  ngOnInit() {\n    this.prepareConfigForEnabledPresets();\n  }\n\n  ngAfterViewInit() {\n    this.initializeDateRangePicker();\n  }\n\n  initializeDateRangePicker(minDate?:any, maxDate?:any){\n    let start = this.startTime == 0 ? moment.utc().subtract(29, 'days') : moment.utc(this.startTime * 1000);\n    let end = this.endTime == 0 ? moment.utc() : moment.utc(this.endTime * 1000);\n    let that: any = this;\n    let dateRangePickerConfig = {\n      alwaysShowCalendars: that.alwaysShowCalendar,\n      timePicker: that.timePicker,\n      startDate: that.startTime,\n      endDate: that.endTime,\n      ranges: that.enabledPresetsRangeConfig\n    };\n    if(minDate){\n      dateRangePickerConfig['minDate'] = minDate;\n    }\n    if(maxDate){\n      dateRangePickerConfig['maxDate'] = maxDate;\n    }\n    if(this.locale){\n      dateRangePickerConfig['locale'] = this.locale;\n    }\n    $(this.dateRangePicker.nativeElement).daterangepicker(dateRangePickerConfig, this.cb.bind(this)).on('outsideClick.daterangepicker', function(ev, picker) {\n      that.checkOutsideClickEvent = true;\n      picker.startDate = picker.oldStartDate;\n      picker.endDate = picker.oldEndDate;\n    });\n  }\n\n  cb(start, end) {\n    setTimeout(() => {\n      if(!this.checkOutsideClickEvent) {\n        $(this.dateRangePickerInput.nativeElement).html(start.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY) + ' - ' +\n          end.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY));\n        this.dateRangeChanged.emit({\n          startDate: DateUtil.getEpochTimeInSeconds(start['_d'].getTime() - (start['_d'].getTimezoneOffset() * 60000)),\n          endDate: DateUtil.getEpochTimeInSeconds(end['_d'].getTime() - (end['_d'].getTimezoneOffset() * 60000)),\n          dateRangeString: start.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY) + ' - ' +\n          end.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY)\n        });\n        this.selectedDuration = start.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY) + ' - ' +\n          end.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY);\n      } else {\n        this.checkOutsideClickEvent = !this.checkOutsideClickEvent;\n      }\n    },0);\n  }\n\n  prepareConfigForEnabledPresets() {\n    let config: any = {};\n    for (let preset of this.enabledPresets) {\n      config[preset] = this.presetsConfig[preset];\n    }\n    this.enabledPresetsRangeConfig = config;\n  }\n\n  updateDates(start:any, end:any){\n    $(this.dateRangePicker.nativeElement).data('daterangepicker').setStartDate(start.format('MM-DD-YYYY'));\n    $(this.dateRangePicker.nativeElement).data('daterangepicker').setEndDate(end.format('MM-DD-YYYY'));\n    $(this.dateRangePickerInput.nativeElement).html(start.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY) + ' - ' +\n      end.format(DateUtil.DATE_FORMAT_DD_MMM_YYYY));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DaterangepickerLibComponent } from './daterangepicker-lib.component';\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [DaterangepickerLibComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [DaterangepickerLibComponent]\n})\nexport class DaterangepickerLibModule { }\n"],"names":["tslib_1.__values"],"mappings":"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"}